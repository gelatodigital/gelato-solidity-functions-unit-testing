{
  "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
  "abi": [
    {
      "inputs": [],
      "name": "encodeBlockTriggerModuleArg",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_expression",
          "type": "string"
        }
      ],
      "name": "encodeCronTriggerModuleArg",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bytes32[][]",
          "name": "_topics",
          "type": "bytes32[][]"
        },
        {
          "internalType": "uint256",
          "name": "_blockConfirmations",
          "type": "uint256"
        }
      ],
      "name": "encodeEventTriggerModuleArg",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_start",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_interval",
          "type": "uint128"
        }
      ],
      "name": "encodeTimeTriggerModuleArg",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "execAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nonce1Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onCreateTask",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "taskId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "taskCreator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "execAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "execData",
          "type": "bytes"
        }
      ],
      "name": "postExecCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_taskCreator",
          "type": "address"
        }
      ],
      "name": "preCancelTask",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_taskCreator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_execAddress",
          "type": "address"
        }
      ],
      "name": "preCreateTask",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_execAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_execData",
          "type": "bytes"
        }
      ],
      "name": "preExecCall",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "taskCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum LibDataTypes.Module",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "taskModuleAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "timedTask",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "nextExec",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "interval",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x40768ae87592541e5aa0920fdb90ca1b16fb8b24a277dbfd7debd68ac16ea8f6",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
    "transactionIndex": 0,
    "gasUsed": "1078676",
    "logsBloom": "0x
    "blockHash": "0xb03a11c69f497899c3b206e71a4d66e2d4e7abc5aded3fe16609833a3a3b08de",
    "transactionHash": "0x40768ae87592541e5aa0920fdb90ca1b16fb8b24a277dbfd7debd68ac16ea8f6",
    "logs": [],
    "blockNumber": 24226,
    "cumulativeGasUsed": "1078676",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3e732f23068f6192d2fba984e5b4f4ff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"encodeBlockTriggerModuleArg\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_expression\",\"type\":\"string\"}],\"name\":\"encodeCronTriggerModuleArg\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bytes32[][]\",\"name\":\"_topics\",\"type\":\"bytes32[][]\"},{\"internalType\":\"uint256\",\"name\":\"_blockConfirmations\",\"type\":\"uint256\"}],\"name\":\"encodeEventTriggerModuleArg\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_interval\",\"type\":\"uint128\"}],\"name\":\"encodeTimeTriggerModuleArg\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"execAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nonce1Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onCreateTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"taskId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"taskCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"execAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"execData\",\"type\":\"bytes\"}],\"name\":\"postExecCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_taskCreator\",\"type\":\"address\"}],\"name\":\"preCancelTask\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taskCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_execAddress\",\"type\":\"address\"}],\"name\":\"preCreateTask\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_execAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_execData\",\"type\":\"bytes\"}],\"name\":\"preExecCall\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"taskCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum LibDataTypes.Module\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"taskModuleAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"timedTask\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"nextExec\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"interval\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"encodeCronTriggerModuleArg(string)\":{\"params\":{\"_expression\":\"Cron expression\"}},\"encodeEventTriggerModuleArg(address,bytes32[][],uint256)\":{\"params\":{\"_address\":\"Address to listen to for events.\",\"_blockConfirmations\":\"Number of blocks to wait for before triggering.\",\"_topics\":\"Set of topics to filter at each topic position.\"}},\"encodeTimeTriggerModuleArg(uint128,uint128)\":{\"params\":{\"_interval\":\"Time interval between each execution.\",\"_start\":\"Time when the first execution should occur.\"}},\"onCreateTask(bytes32,address,address,bytes,bytes)\":{\"params\":{\"execAddress\":\"Address of contract that should be called.\",\"execData\":\"Execution data to be called with / function selector if execution data is yet to be determined.\",\"initModuleArg\":\"Encoded arguments for module if any.\",\"taskCreator\":\"The address which created the task.\",\"taskId\":\"Unique hash of the task created.\"}},\"postExecCall(bytes32,address,address,bytes)\":{\"params\":{\"execAddress\":\"Address of contract that should be called.\",\"execData\":\"Execution data to be called with / function selector if execution data is yet to be determined.\",\"taskCreator\":\"The address which created the task.\",\"taskId\":\"Unique hash of the task created.\"}},\"preCancelTask(bytes32,address)\":{\"details\":\"Modules can override taskCreator.\",\"params\":{\"taskCreator\":\"The address which created the task.\",\"taskId\":\"Unique hash of the task created.\"},\"returns\":{\"_0\":\"address Overriden or original taskCreator.\"}},\"preCreateTask(address,address)\":{\"details\":\"Modules can override execAddress or taskCreator. {See ProxyModule-preCreateTask}\",\"params\":{\"execAddress\":\"Address of contract that should be called.\",\"taskCreator\":\"The address which created the task.\"},\"returns\":{\"_0\":\"address Overriden or original taskCreator.\",\"_1\":\"address Overriden or original execAddress.\"}},\"preExecCall(bytes32,address,address,bytes)\":{\"params\":{\"execAddress\":\"Address of contract that should be called.\",\"execData\":\"Execution data to be called with / function selector if execution data is yet to be determined.\",\"taskCreator\":\"The address which created the task.\",\"taskId\":\"Unique hash of the task created.\"},\"returns\":{\"_0\":\"address Overriden or original execution address.\",\"_1\":\"bytes Overriden or original execution data.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"encodeBlockTriggerModuleArg()\":{\"notice\":\"Helper function to encode arguments for TriggerModule for Block.\"},\"encodeCronTriggerModuleArg(string)\":{\"notice\":\"Helper function to encode arguments for TriggerModule for Cron.\"},\"encodeEventTriggerModuleArg(address,bytes32[][],uint256)\":{\"notice\":\"Helper function to encode arguments for TriggerModule for Event.\"},\"encodeTimeTriggerModuleArg(uint128,uint128)\":{\"notice\":\"Helper function to encode arguments for TriggerModule for Timer.\"},\"onCreateTask(bytes32,address,address,bytes,bytes)\":{\"notice\":\"Initiates task module whenever `createTask` is being called.\"},\"postExecCall(bytes32,address,address,bytes)\":{\"notice\":\"Called during `exec` and after execAddress is called.\"},\"preCancelTask(bytes32,address)\":{\"notice\":\"Called before taskId is removed from _createdTasks[].\"},\"preCreateTask(address,address)\":{\"notice\":\"Called before generating taskId.\"},\"preExecCall(bytes32,address,address,bytes)\":{\"notice\":\"Called during `exec` and before execAddress is called.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/taskModules/TriggerModule.sol\":\"TriggerModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```solidity\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n *\\n * [WARNING]\\n * ====\\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\\n * unusable.\\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\\n *\\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\\n * array of EnumerableSet.\\n * ====\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position is the index of the value in the `values` array plus 1.\\n        // Position 0 is used to mean a value is not in the set.\\n        mapping(bytes32 value => uint256) _positions;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._positions[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We cache the value's position to prevent multiple reads from the same storage slot\\n        uint256 position = set._positions[value];\\n\\n        if (position != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 valueIndex = position - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (valueIndex != lastIndex) {\\n                bytes32 lastValue = set._values[lastIndex];\\n\\n                // Move the lastValue to the index where the value to delete is\\n                set._values[valueIndex] = lastValue;\\n                // Update the tracked position of the lastValue (that was just moved)\\n                set._positions[lastValue] = position;\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the tracked position for the deleted slot\\n            delete set._positions[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._positions[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        bytes32[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\"},\"contracts/AutomateStorage.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.12;\\r\\nimport {\\r\\n    EnumerableSet\\r\\n} from \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\r\\nimport {LibDataTypes} from \\\"./libraries/LibDataTypes.sol\\\";\\r\\n\\r\\n/**\\r\\n * @notice Storage layout of Automate smart contract.\\r\\n */\\r\\n// solhint-disable max-states-count\\r\\nabstract contract AutomateStorage {\\r\\n    mapping(bytes32 => address) public taskCreator; ///@dev Deprecated\\r\\n    mapping(bytes32 => address) public execAddresses; ///@dev Deprecated\\r\\n    mapping(address => EnumerableSet.Bytes32Set) internal _createdTasks;\\r\\n\\r\\n    uint256 public fee;\\r\\n    address public feeToken;\\r\\n\\r\\n    ///@dev Appended State\\r\\n    mapping(bytes32 => LibDataTypes.Time) public timedTask; ///@dev Deprecated\\r\\n    mapping(LibDataTypes.Module => address) public taskModuleAddresses;\\r\\n    mapping(bytes32 => uint256) public nonce1Balance; ///@dev Deprecated\\r\\n}\\r\\n\",\"keccak256\":\"0x006a8f1e6f6b8e8f4f4cfc49990db99f399b193df049f3b3b835e480fe73be85\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ITaskModule.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.12;\\r\\n\\r\\n// solhint-disable max-line-length\\r\\ninterface ITaskModule {\\r\\n    /**\\r\\n     * @notice Called before generating taskId.\\r\\n     * @dev Modules can override execAddress or taskCreator. {See ProxyModule-preCreateTask}\\r\\n     *\\r\\n     * @param taskCreator The address which created the task.\\r\\n     * @param execAddress Address of contract that should be called.\\r\\n     *\\r\\n     * @return address Overriden or original taskCreator.\\r\\n     * @return address Overriden or original execAddress.\\r\\n     */\\r\\n    function preCreateTask(address taskCreator, address execAddress)\\r\\n        external\\r\\n        returns (address, address);\\r\\n\\r\\n    /**\\r\\n     * @notice Initiates task module whenever `createTask` is being called.\\r\\n     *\\r\\n     * @param taskId Unique hash of the task created.\\r\\n     * @param taskCreator The address which created the task.\\r\\n     * @param execAddress Address of contract that should be called.\\r\\n     * @param execData Execution data to be called with / function selector if execution data is yet to be determined.\\r\\n     * @param initModuleArg Encoded arguments for module if any.\\r\\n     */\\r\\n    function onCreateTask(\\r\\n        bytes32 taskId,\\r\\n        address taskCreator,\\r\\n        address execAddress,\\r\\n        bytes calldata execData,\\r\\n        bytes calldata initModuleArg\\r\\n    ) external;\\r\\n\\r\\n    /**\\r\\n     * @notice Called before taskId is removed from _createdTasks[].\\r\\n     * @dev Modules can override taskCreator.\\r\\n     *\\r\\n     * @param taskId Unique hash of the task created.\\r\\n     * @param taskCreator The address which created the task.\\r\\n     *\\r\\n     * @return address Overriden or original taskCreator.\\r\\n     */\\r\\n    function preCancelTask(bytes32 taskId, address taskCreator)\\r\\n        external\\r\\n        returns (address);\\r\\n\\r\\n    /**\\r\\n     * @notice Called during `exec` and before execAddress is called.\\r\\n     *\\r\\n     * @param taskId Unique hash of the task created.\\r\\n     * @param taskCreator The address which created the task.\\r\\n     * @param execAddress Address of contract that should be called.\\r\\n     * @param execData Execution data to be called with / function selector if execution data is yet to be determined.\\r\\n     *\\r\\n     * @return address Overriden or original execution address.\\r\\n     * @return bytes Overriden or original execution data.\\r\\n     */\\r\\n    function preExecCall(\\r\\n        bytes32 taskId,\\r\\n        address taskCreator,\\r\\n        address execAddress,\\r\\n        bytes calldata execData\\r\\n    ) external returns (address, bytes memory);\\r\\n\\r\\n    /**\\r\\n     * @notice Called during `exec` and after execAddress is called.\\r\\n     *\\r\\n     * @param taskId Unique hash of the task created.\\r\\n     * @param taskCreator The address which created the task.\\r\\n     * @param execAddress Address of contract that should be called.\\r\\n     * @param execData Execution data to be called with / function selector if execution data is yet to be determined.\\r\\n     */\\r\\n    function postExecCall(\\r\\n        bytes32 taskId,\\r\\n        address taskCreator,\\r\\n        address execAddress,\\r\\n        bytes calldata execData\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x4b6c96ccd21885c94d07c35560773611d0374fef52edd1c434d5a5285c507325\",\"license\":\"MIT\"},\"contracts/libraries/LibDataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.12;\\r\\n\\r\\n// solhint-disable max-line-length\\r\\nlibrary LibDataTypes {\\r\\n    /**\\r\\n     * @notice Whitelisted modules that are available for users to customise conditions and specifications of their tasks.\\r\\n     *\\r\\n     * @param RESOLVER Use dynamic condition & input data for execution. {See ResolverModule.sol}\\r\\n     * @param DEPRECATED_TIME deprecated\\r\\n     * @param PROXY Creates a dedicated caller (msg.sender) to be used when executing the task. {See ProxyModule.sol}\\r\\n     * @param SINGLE_EXEC Task is cancelled after one execution. {See SingleExecModule.sol}\\r\\n     * @param WEB3_FUNCTION Use off-chain condition & input data for execution. {See Web3FunctionModule.sol}\\r\\n     * @param TRIGGER Repeated execution of task ata a specified timing and interval or cron. {See TriggerModule.sol}\\r\\n     */\\r\\n    enum Module {\\r\\n        RESOLVER,\\r\\n        DEPRECATED_TIME, // @deprecated\\r\\n        PROXY,\\r\\n        SINGLE_EXEC,\\r\\n        WEB3_FUNCTION,\\r\\n        TRIGGER\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Struct to contain modules and their relative arguments that are used for task creation.\\r\\n     *\\r\\n     * @param modules List of selected modules.\\r\\n     * @param args Arguments of modules if any. Pass \\\"0x\\\" for modules which does not require args {See encodeModuleArg}\\r\\n     */\\r\\n    struct ModuleData {\\r\\n        Module[] modules;\\r\\n        bytes[] args;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Struct for time module.\\r\\n     *\\r\\n     * @param nextExec Time when the next execution should occur.\\r\\n     * @param interval Time interval between each execution.\\r\\n     */\\r\\n    struct Time {\\r\\n        uint128 nextExec;\\r\\n        uint128 interval;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Types of trigger\\r\\n     *\\r\\n     * @param TIME Time triggered tasks, starting at a specific time and triggered intervally\\r\\n     * @param CRON Cron triggered tasks, triggered according to the cron conditions\\r\\n     */\\r\\n    enum TriggerType {\\r\\n        TIME,\\r\\n        CRON,\\r\\n        EVENT,\\r\\n        BLOCK\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Struct for trigger module\\r\\n     *\\r\\n     * @param triggerType Type of the trigger\\r\\n     * @param triggerConfig Trigger configuration that shuold be parsed according to triggerType\\r\\n     */\\r\\n    struct TriggerModuleData {\\r\\n        TriggerType triggerType;\\r\\n        bytes triggerConfig;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1ebb4822c20f0455dbef7f4726efb304ca25be1cf8e413964557b332f09d765f\",\"license\":\"MIT\"},\"contracts/taskModules/TaskModuleBase.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.12;\\r\\n\\r\\nimport {AutomateStorage} from \\\"../AutomateStorage.sol\\\";\\r\\nimport {ITaskModule} from \\\"../interfaces/ITaskModule.sol\\\";\\r\\n\\r\\n// solhint-disable no-empty-blocks\\r\\nabstract contract TaskModuleBase is AutomateStorage, ITaskModule {\\r\\n    ///@inheritdoc ITaskModule\\r\\n    function preCreateTask(address _taskCreator, address _execAddress)\\r\\n        external\\r\\n        virtual\\r\\n        override\\r\\n        returns (address, address)\\r\\n    {\\r\\n        return (_taskCreator, _execAddress);\\r\\n    }\\r\\n\\r\\n    ///@inheritdoc ITaskModule\\r\\n    function onCreateTask(\\r\\n        bytes32,\\r\\n        address,\\r\\n        address,\\r\\n        bytes calldata,\\r\\n        bytes calldata\\r\\n    ) external virtual override {}\\r\\n\\r\\n    ///@inheritdoc ITaskModule\\r\\n    function preCancelTask(bytes32, address _taskCreator)\\r\\n        external\\r\\n        virtual\\r\\n        override\\r\\n        returns (address)\\r\\n    {\\r\\n        return _taskCreator;\\r\\n    }\\r\\n\\r\\n    ///@inheritdoc ITaskModule\\r\\n    function preExecCall(\\r\\n        bytes32,\\r\\n        address,\\r\\n        address _execAddress,\\r\\n        bytes calldata _execData\\r\\n    ) external virtual override returns (address, bytes memory) {\\r\\n        return (_execAddress, _execData);\\r\\n    }\\r\\n\\r\\n    ///@inheritdoc ITaskModule\\r\\n    function postExecCall(\\r\\n        bytes32 taskId,\\r\\n        address taskCreator,\\r\\n        address execAddress,\\r\\n        bytes calldata execData\\r\\n    ) external virtual override {}\\r\\n}\\r\\n\",\"keccak256\":\"0xdc8701badb493edc5dde2740aa27e6a9a7215724fceb2185412dea5ba11b182e\",\"license\":\"UNLICENSED\"},\"contracts/taskModules/TriggerModule.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.12;\\r\\n\\r\\nimport {TaskModuleBase} from \\\"./TaskModuleBase.sol\\\";\\r\\nimport {LibDataTypes} from \\\"../libraries/LibDataTypes.sol\\\";\\r\\n\\r\\n// solhint-disable not-rely-on-time\\r\\ncontract TriggerModule is TaskModuleBase {\\r\\n    /**\\r\\n     * @notice Helper function to encode arguments for TriggerModule for Timer.\\r\\n     *\\r\\n     * @param _start Time when the first execution should occur.\\r\\n     * @param _interval Time interval between each execution.\\r\\n     */\\r\\n    function encodeTimeTriggerModuleArg(uint128 _start, uint128 _interval)\\r\\n        external\\r\\n        pure\\r\\n        returns (bytes memory)\\r\\n    {\\r\\n        bytes memory triggerConfig = abi.encode(_start, _interval);\\r\\n\\r\\n        return abi.encode(LibDataTypes.TriggerType.TIME, triggerConfig);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Helper function to encode arguments for TriggerModule for Cron.\\r\\n     *\\r\\n     * @param _expression Cron expression\\r\\n     */\\r\\n    function encodeCronTriggerModuleArg(string calldata _expression)\\r\\n        external\\r\\n        pure\\r\\n        returns (bytes memory)\\r\\n    {\\r\\n        bytes memory triggerConfig = abi.encode(_expression);\\r\\n\\r\\n        return abi.encode(LibDataTypes.TriggerType.CRON, triggerConfig);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Helper function to encode arguments for TriggerModule for Event.\\r\\n     *\\r\\n     * @param _address Address to listen to for events.\\r\\n     * @param _topics Set of topics to filter at each topic position.\\r\\n     * @param _blockConfirmations Number of blocks to wait for before triggering.\\r\\n     */\\r\\n    function encodeEventTriggerModuleArg(\\r\\n        address _address,\\r\\n        bytes32[][] memory _topics,\\r\\n        uint256 _blockConfirmations\\r\\n    ) external pure returns (bytes memory) {\\r\\n        bytes memory triggerConfig = abi.encode(\\r\\n            _address,\\r\\n            _topics,\\r\\n            _blockConfirmations\\r\\n        );\\r\\n\\r\\n        return abi.encode(LibDataTypes.TriggerType.EVENT, triggerConfig);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Helper function to encode arguments for TriggerModule for Block.\\r\\n     */\\r\\n    function encodeBlockTriggerModuleArg()\\r\\n        external\\r\\n        pure\\r\\n        returns (bytes memory)\\r\\n    {\\r\\n        return abi.encode(LibDataTypes.TriggerType.BLOCK);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x29169b6eba1c10846593045a08912d1cf57cd15d80d6b8bbc0674bd8dcd94f54\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611290806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063994ee8b711610097578063b81cd86611610066578063b81cd866146102fa578063c10304f71461032b578063cd3d4fb91461035c578063ddca3f431461038c57610100565b8063994ee8b714610262578063ac21631a14610292578063b0ccbdf0146102c2578063b2db0b41146102de57610100565b8063647846a5116100d3578063647846a5146101b35780636d2dd29f146101d1578063714d732f1461020157806376474e6a1461023157610100565b8063121b944c1461010557806314ae9926146101235780631fc2d3d0146101535780632e6e0bd014610183575b600080fd5b61010d6103aa565b60405161011a9190610723565b60405180910390f35b61013d600480360381019061013891906107ed565b6103d2565b60405161014a919061083c565b60405180910390f35b61016d6004803603810190610168919061089f565b6103dd565b60405161017a9190610723565b60405180910390f35b61019d600480360381019061019891906108df565b610431565b6040516101aa919061083c565b60405180910390f35b6101bb610464565b6040516101c8919061083c565b60405180910390f35b6101eb60048036038101906101e691906108df565b61048a565b6040516101f8919061083c565b60405180910390f35b61021b60048036038101906102169190610971565b6104bd565b6040516102289190610723565b60405180910390f35b61024b600480360381019061024691906109be565b610511565b6040516102599291906109fe565b60405180910390f35b61027c60048036038101906102779190610c7c565b610521565b6040516102899190610723565b60405180910390f35b6102ac60048036038101906102a791906108df565b610578565b6040516102b99190610cfa565b60405180910390f35b6102dc60048036038101906102d79190610d6b565b610590565b005b6102f860048036038101906102f39190610e27565b610599565b005b610314600480360381019061030f91906108df565b6105a0565b604051610322929190610ebe565b60405180910390f35b61034560048036038101906103409190610e27565b6105fc565b604051610353929190610ee7565b60405180910390f35b61037660048036038101906103719190610f3c565b61065a565b604051610383919061083c565b60405180910390f35b61039461068d565b6040516103a19190610cfa565b60405180910390f35b606060036040516020016103be9190610fe0565b604051602081830303815290604052905090565b600081905092915050565b6060600083836040516020016103f4929190610ebe565b6040516020818303038152906040529050600081604051602001610419929190610ffb565b60405160208183030381529060405291505092915050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600083836040516020016104d4929190611078565b60405160208183030381529060405290506001816040516020016104f9929190610ffb565b60405160208183030381529060405291505092915050565b6000808383915091509250929050565b6060600084848460405160200161053a9392919061121c565b604051602081830303815290604052905060028160405160200161055f929190610ffb565b6040516020818303038152906040529150509392505050565b60076020528060005260406000206000915090505481565b50505050505050565b5050505050565b60056020528060005260406000206000915090508060000160009054906101000a90046fffffffffffffffffffffffffffffffff16908060000160109054906101000a90046fffffffffffffffffffffffffffffffff16905082565b6000606084848481818080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090509050915091509550959350505050565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600081519050919050565b600082825260208201905092915050565b60005b838110156106cd5780820151818401526020810190506106b2565b60008484015250505050565b6000601f19601f8301169050919050565b60006106f582610693565b6106ff818561069e565b935061070f8185602086016106af565b610718816106d9565b840191505092915050565b6000602082019050818103600083015261073d81846106ea565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61076c81610759565b811461077757600080fd5b50565b60008135905061078981610763565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ba8261078f565b9050919050565b6107ca816107af565b81146107d557600080fd5b50565b6000813590506107e7816107c1565b92915050565b600080604083850312156108045761080361074f565b5b60006108128582860161077a565b9250506020610823858286016107d8565b9150509250929050565b610836816107af565b82525050565b6000602082019050610851600083018461082d565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61087c81610857565b811461088757600080fd5b50565b60008135905061089981610873565b92915050565b600080604083850312156108b6576108b561074f565b5b60006108c48582860161088a565b92505060206108d58582860161088a565b9150509250929050565b6000602082840312156108f5576108f461074f565b5b60006109038482850161077a565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126109315761093061090c565b5b8235905067ffffffffffffffff81111561094e5761094d610911565b5b60208301915083600182028301111561096a57610969610916565b5b9250929050565b600080602083850312156109885761098761074f565b5b600083013567ffffffffffffffff8111156109a6576109a5610754565b5b6109b28582860161091b565b92509250509250929050565b600080604083850312156109d5576109d461074f565b5b60006109e3858286016107d8565b92505060206109f4858286016107d8565b9150509250929050565b6000604082019050610a13600083018561082d565b610a20602083018461082d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a5f826106d9565b810181811067ffffffffffffffff82111715610a7e57610a7d610a27565b5b80604052505050565b6000610a91610745565b9050610a9d8282610a56565b919050565b600067ffffffffffffffff821115610abd57610abc610a27565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ae957610ae8610a27565b5b602082029050602081019050919050565b6000610b0d610b0884610ace565b610a87565b90508083825260208201905060208402830185811115610b3057610b2f610916565b5b835b81811015610b595780610b45888261077a565b845260208401935050602081019050610b32565b5050509392505050565b600082601f830112610b7857610b7761090c565b5b8135610b88848260208601610afa565b91505092915050565b6000610ba4610b9f84610aa2565b610a87565b90508083825260208201905060208402830185811115610bc757610bc6610916565b5b835b81811015610c0e57803567ffffffffffffffff811115610bec57610beb61090c565b5b808601610bf98982610b63565b85526020850194505050602081019050610bc9565b5050509392505050565b600082601f830112610c2d57610c2c61090c565b5b8135610c3d848260208601610b91565b91505092915050565b6000819050919050565b610c5981610c46565b8114610c6457600080fd5b50565b600081359050610c7681610c50565b92915050565b600080600060608486031215610c9557610c9461074f565b5b6000610ca3868287016107d8565b935050602084013567ffffffffffffffff811115610cc457610cc3610754565b5b610cd086828701610c18565b9250506040610ce186828701610c67565b9150509250925092565b610cf481610c46565b82525050565b6000602082019050610d0f6000830184610ceb565b92915050565b60008083601f840112610d2b57610d2a61090c565b5b8235905067ffffffffffffffff811115610d4857610d47610911565b5b602083019150836001820283011115610d6457610d63610916565b5b9250929050565b600080600080600080600060a0888a031215610d8a57610d8961074f565b5b6000610d988a828b0161077a565b9750506020610da98a828b016107d8565b9650506040610dba8a828b016107d8565b955050606088013567ffffffffffffffff811115610ddb57610dda610754565b5b610de78a828b01610d15565b9450945050608088013567ffffffffffffffff811115610e0a57610e09610754565b5b610e168a828b01610d15565b925092505092959891949750929550565b600080600080600060808688031215610e4357610e4261074f565b5b6000610e518882890161077a565b9550506020610e62888289016107d8565b9450506040610e73888289016107d8565b935050606086013567ffffffffffffffff811115610e9457610e93610754565b5b610ea088828901610d15565b92509250509295509295909350565b610eb881610857565b82525050565b6000604082019050610ed36000830185610eaf565b610ee06020830184610eaf565b9392505050565b6000604082019050610efc600083018561082d565b8181036020830152610f0e81846106ea565b90509392505050565b60068110610f2457600080fd5b50565b600081359050610f3681610f17565b92915050565b600060208284031215610f5257610f5161074f565b5b6000610f6084828501610f27565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610fa957610fa8610f69565b5b50565b6000819050610fba82610f98565b919050565b6000610fca82610fac565b9050919050565b610fda81610fbf565b82525050565b6000602082019050610ff56000830184610fd1565b92915050565b60006040820190506110106000830185610fd1565b818103602083015261102281846106ea565b90509392505050565b600082825260208201905092915050565b82818337600083830152505050565b6000611057838561102b565b935061106483858461103c565b61106d836106d9565b840190509392505050565b6000602082019050818103600083015261109381848661104b565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110fd81610759565b82525050565b600061110f83836110f4565b60208301905092915050565b6000602082019050919050565b6000611133826110c8565b61113d81856110d3565b9350611148836110e4565b8060005b838110156111795781516111608882611103565b975061116b8361111b565b92505060018101905061114c565b5085935050505092915050565b60006111928383611128565b905092915050565b6000602082019050919050565b60006111b28261109c565b6111bc81856110a7565b9350836020820285016111ce856110b8565b8060005b8581101561120a57848403895281516111eb8582611186565b94506111f68361119a565b925060208a019950506001810190506111d2565b50829750879550505050505092915050565b6000606082019050611231600083018661082d565b818103602083015261124381856111a7565b90506112526040830184610ceb565b94935050505056fea2646970667358221220c15918f8530c8e481f2a5e41d35ac577c68ba00a5b7db483ff3a512b7f17df6b64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063994ee8b711610097578063b81cd86611610066578063b81cd866146102fa578063c10304f71461032b578063cd3d4fb91461035c578063ddca3f431461038c57610100565b8063994ee8b714610262578063ac21631a14610292578063b0ccbdf0146102c2578063b2db0b41146102de57610100565b8063647846a5116100d3578063647846a5146101b35780636d2dd29f146101d1578063714d732f1461020157806376474e6a1461023157610100565b8063121b944c1461010557806314ae9926146101235780631fc2d3d0146101535780632e6e0bd014610183575b600080fd5b61010d6103aa565b60405161011a9190610723565b60405180910390f35b61013d600480360381019061013891906107ed565b6103d2565b60405161014a919061083c565b60405180910390f35b61016d6004803603810190610168919061089f565b6103dd565b60405161017a9190610723565b60405180910390f35b61019d600480360381019061019891906108df565b610431565b6040516101aa919061083c565b60405180910390f35b6101bb610464565b6040516101c8919061083c565b60405180910390f35b6101eb60048036038101906101e691906108df565b61048a565b6040516101f8919061083c565b60405180910390f35b61021b60048036038101906102169190610971565b6104bd565b6040516102289190610723565b60405180910390f35b61024b600480360381019061024691906109be565b610511565b6040516102599291906109fe565b60405180910390f35b61027c60048036038101906102779190610c7c565b610521565b6040516102899190610723565b60405180910390f35b6102ac60048036038101906102a791906108df565b610578565b6040516102b99190610cfa565b60405180910390f35b6102dc60048036038101906102d79190610d6b565b610590565b005b6102f860048036038101906102f39190610e27565b610599565b005b610314600480360381019061030f91906108df565b6105a0565b604051610322929190610ebe565b60405180910390f35b61034560048036038101906103409190610e27565b6105fc565b604051610353929190610ee7565b60405180910390f35b61037660048036038101906103719190610f3c565b61065a565b604051610383919061083c565b60405180910390f35b61039461068d565b6040516103a19190610cfa565b60405180910390f35b606060036040516020016103be9190610fe0565b604051602081830303815290604052905090565b600081905092915050565b6060600083836040516020016103f4929190610ebe565b6040516020818303038152906040529050600081604051602001610419929190610ffb565b60405160208183030381529060405291505092915050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600083836040516020016104d4929190611078565b60405160208183030381529060405290506001816040516020016104f9929190610ffb565b60405160208183030381529060405291505092915050565b6000808383915091509250929050565b6060600084848460405160200161053a9392919061121c565b604051602081830303815290604052905060028160405160200161055f929190610ffb565b6040516020818303038152906040529150509392505050565b60076020528060005260406000206000915090505481565b50505050505050565b5050505050565b60056020528060005260406000206000915090508060000160009054906101000a90046fffffffffffffffffffffffffffffffff16908060000160109054906101000a90046fffffffffffffffffffffffffffffffff16905082565b6000606084848481818080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505090509050915091509550959350505050565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600081519050919050565b600082825260208201905092915050565b60005b838110156106cd5780820151818401526020810190506106b2565b60008484015250505050565b6000601f19601f8301169050919050565b60006106f582610693565b6106ff818561069e565b935061070f8185602086016106af565b610718816106d9565b840191505092915050565b6000602082019050818103600083015261073d81846106ea565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61076c81610759565b811461077757600080fd5b50565b60008135905061078981610763565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ba8261078f565b9050919050565b6107ca816107af565b81146107d557600080fd5b50565b6000813590506107e7816107c1565b92915050565b600080604083850312156108045761080361074f565b5b60006108128582860161077a565b9250506020610823858286016107d8565b9150509250929050565b610836816107af565b82525050565b6000602082019050610851600083018461082d565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61087c81610857565b811461088757600080fd5b50565b60008135905061089981610873565b92915050565b600080604083850312156108b6576108b561074f565b5b60006108c48582860161088a565b92505060206108d58582860161088a565b9150509250929050565b6000602082840312156108f5576108f461074f565b5b60006109038482850161077a565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126109315761093061090c565b5b8235905067ffffffffffffffff81111561094e5761094d610911565b5b60208301915083600182028301111561096a57610969610916565b5b9250929050565b600080602083850312156109885761098761074f565b5b600083013567ffffffffffffffff8111156109a6576109a5610754565b5b6109b28582860161091b565b92509250509250929050565b600080604083850312156109d5576109d461074f565b5b60006109e3858286016107d8565b92505060206109f4858286016107d8565b9150509250929050565b6000604082019050610a13600083018561082d565b610a20602083018461082d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a5f826106d9565b810181811067ffffffffffffffff82111715610a7e57610a7d610a27565b5b80604052505050565b6000610a91610745565b9050610a9d8282610a56565b919050565b600067ffffffffffffffff821115610abd57610abc610a27565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610ae957610ae8610a27565b5b602082029050602081019050919050565b6000610b0d610b0884610ace565b610a87565b90508083825260208201905060208402830185811115610b3057610b2f610916565b5b835b81811015610b595780610b45888261077a565b845260208401935050602081019050610b32565b5050509392505050565b600082601f830112610b7857610b7761090c565b5b8135610b88848260208601610afa565b91505092915050565b6000610ba4610b9f84610aa2565b610a87565b90508083825260208201905060208402830185811115610bc757610bc6610916565b5b835b81811015610c0e57803567ffffffffffffffff811115610bec57610beb61090c565b5b808601610bf98982610b63565b85526020850194505050602081019050610bc9565b5050509392505050565b600082601f830112610c2d57610c2c61090c565b5b8135610c3d848260208601610b91565b91505092915050565b6000819050919050565b610c5981610c46565b8114610c6457600080fd5b50565b600081359050610c7681610c50565b92915050565b600080600060608486031215610c9557610c9461074f565b5b6000610ca3868287016107d8565b935050602084013567ffffffffffffffff811115610cc457610cc3610754565b5b610cd086828701610c18565b9250506040610ce186828701610c67565b9150509250925092565b610cf481610c46565b82525050565b6000602082019050610d0f6000830184610ceb565b92915050565b60008083601f840112610d2b57610d2a61090c565b5b8235905067ffffffffffffffff811115610d4857610d47610911565b5b602083019150836001820283011115610d6457610d63610916565b5b9250929050565b600080600080600080600060a0888a031215610d8a57610d8961074f565b5b6000610d988a828b0161077a565b9750506020610da98a828b016107d8565b9650506040610dba8a828b016107d8565b955050606088013567ffffffffffffffff811115610ddb57610dda610754565b5b610de78a828b01610d15565b9450945050608088013567ffffffffffffffff811115610e0a57610e09610754565b5b610e168a828b01610d15565b925092505092959891949750929550565b600080600080600060808688031215610e4357610e4261074f565b5b6000610e518882890161077a565b9550506020610e62888289016107d8565b9450506040610e73888289016107d8565b935050606086013567ffffffffffffffff811115610e9457610e93610754565b5b610ea088828901610d15565b92509250509295509295909350565b610eb881610857565b82525050565b6000604082019050610ed36000830185610eaf565b610ee06020830184610eaf565b9392505050565b6000604082019050610efc600083018561082d565b8181036020830152610f0e81846106ea565b90509392505050565b60068110610f2457600080fd5b50565b600081359050610f3681610f17565b92915050565b600060208284031215610f5257610f5161074f565b5b6000610f6084828501610f27565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610fa957610fa8610f69565b5b50565b6000819050610fba82610f98565b919050565b6000610fca82610fac565b9050919050565b610fda81610fbf565b82525050565b6000602082019050610ff56000830184610fd1565b92915050565b60006040820190506110106000830185610fd1565b818103602083015261102281846106ea565b90509392505050565b600082825260208201905092915050565b82818337600083830152505050565b6000611057838561102b565b935061106483858461103c565b61106d836106d9565b840190509392505050565b6000602082019050818103600083015261109381848661104b565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110fd81610759565b82525050565b600061110f83836110f4565b60208301905092915050565b6000602082019050919050565b6000611133826110c8565b61113d81856110d3565b9350611148836110e4565b8060005b838110156111795781516111608882611103565b975061116b8361111b565b92505060018101905061114c565b5085935050505092915050565b60006111928383611128565b905092915050565b6000602082019050919050565b60006111b28261109c565b6111bc81856110a7565b9350836020820285016111ce856110b8565b8060005b8581101561120a57848403895281516111eb8582611186565b94506111f68361119a565b925060208a019950506001810190506111d2565b50829750879550505050505092915050565b6000606082019050611231600083018661082d565b818103602083015261124381856111a7565b90506112526040830184610ceb565b94935050505056fea2646970667358221220c15918f8530c8e481f2a5e41d35ac577c68ba00a5b7db483ff3a512b7f17df6b64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "encodeCronTriggerModuleArg(string)": {
        "params": {
          "_expression": "Cron expression"
        }
      },
      "encodeEventTriggerModuleArg(address,bytes32[][],uint256)": {
        "params": {
          "_address": "Address to listen to for events.",
          "_blockConfirmations": "Number of blocks to wait for before triggering.",
          "_topics": "Set of topics to filter at each topic position."
        }
      },
      "encodeTimeTriggerModuleArg(uint128,uint128)": {
        "params": {
          "_interval": "Time interval between each execution.",
          "_start": "Time when the first execution should occur."
        }
      },
      "onCreateTask(bytes32,address,address,bytes,bytes)": {
        "params": {
          "execAddress": "Address of contract that should be called.",
          "execData": "Execution data to be called with / function selector if execution data is yet to be determined.",
          "initModuleArg": "Encoded arguments for module if any.",
          "taskCreator": "The address which created the task.",
          "taskId": "Unique hash of the task created."
        }
      },
      "postExecCall(bytes32,address,address,bytes)": {
        "params": {
          "execAddress": "Address of contract that should be called.",
          "execData": "Execution data to be called with / function selector if execution data is yet to be determined.",
          "taskCreator": "The address which created the task.",
          "taskId": "Unique hash of the task created."
        }
      },
      "preCancelTask(bytes32,address)": {
        "details": "Modules can override taskCreator.",
        "params": {
          "taskCreator": "The address which created the task.",
          "taskId": "Unique hash of the task created."
        },
        "returns": {
          "_0": "address Overriden or original taskCreator."
        }
      },
      "preCreateTask(address,address)": {
        "details": "Modules can override execAddress or taskCreator. {See ProxyModule-preCreateTask}",
        "params": {
          "execAddress": "Address of contract that should be called.",
          "taskCreator": "The address which created the task."
        },
        "returns": {
          "_0": "address Overriden or original taskCreator.",
          "_1": "address Overriden or original execAddress."
        }
      },
      "preExecCall(bytes32,address,address,bytes)": {
        "params": {
          "execAddress": "Address of contract that should be called.",
          "execData": "Execution data to be called with / function selector if execution data is yet to be determined.",
          "taskCreator": "The address which created the task.",
          "taskId": "Unique hash of the task created."
        },
        "returns": {
          "_0": "address Overriden or original execution address.",
          "_1": "bytes Overriden or original execution data."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "encodeBlockTriggerModuleArg()": {
        "notice": "Helper function to encode arguments for TriggerModule for Block."
      },
      "encodeCronTriggerModuleArg(string)": {
        "notice": "Helper function to encode arguments for TriggerModule for Cron."
      },
      "encodeEventTriggerModuleArg(address,bytes32[][],uint256)": {
        "notice": "Helper function to encode arguments for TriggerModule for Event."
      },
      "encodeTimeTriggerModuleArg(uint128,uint128)": {
        "notice": "Helper function to encode arguments for TriggerModule for Timer."
      },
      "onCreateTask(bytes32,address,address,bytes,bytes)": {
        "notice": "Initiates task module whenever `createTask` is being called."
      },
      "postExecCall(bytes32,address,address,bytes)": {
        "notice": "Called during `exec` and after execAddress is called."
      },
      "preCancelTask(bytes32,address)": {
        "notice": "Called before taskId is removed from _createdTasks[]."
      },
      "preCreateTask(address,address)": {
        "notice": "Called before generating taskId."
      },
      "preExecCall(bytes32,address,address,bytes)": {
        "notice": "Called during `exec` and before execAddress is called."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2031,
        "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
        "label": "taskCreator",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 2036,
        "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
        "label": "execAddresses",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_address)"
      },
      {
        "astId": 2042,
        "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
        "label": "_createdTasks",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Bytes32Set)1115_storage)"
      },
      {
        "astId": 2044,
        "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
        "label": "fee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2046,
        "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
        "label": "feeToken",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 2052,
        "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
        "label": "timedTask",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_struct(Time)5134_storage)"
      },
      {
        "astId": 2058,
        "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
        "label": "taskModuleAddresses",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_enum(Module)5119,t_address)"
      },
      {
        "astId": 2062,
        "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
        "label": "nonce1Balance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_bytes32,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_enum(Module)5119": {
        "encoding": "inplace",
        "label": "enum LibDataTypes.Module",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Bytes32Set)1115_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EnumerableSet.Bytes32Set)",
        "numberOfBytes": "32",
        "value": "t_struct(Bytes32Set)1115_storage"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_bytes32,t_struct(Time)5134_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct LibDataTypes.Time)",
        "numberOfBytes": "32",
        "value": "t_struct(Time)5134_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_enum(Module)5119,t_address)": {
        "encoding": "mapping",
        "key": "t_enum(Module)5119",
        "label": "mapping(enum LibDataTypes.Module => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_struct(Bytes32Set)1115_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Bytes32Set",
        "members": [
          {
            "astId": 1114,
            "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)921_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)921_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 916,
            "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 920,
            "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
            "label": "_positions",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Time)5134_storage": {
        "encoding": "inplace",
        "label": "struct LibDataTypes.Time",
        "members": [
          {
            "astId": 5131,
            "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
            "label": "nextExec",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 5133,
            "contract": "contracts/taskModules/TriggerModule.sol:TriggerModule",
            "label": "interval",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}