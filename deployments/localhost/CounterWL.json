{
  "address": "0xde79380FBd39e08150adAA5C6c9dE3146f53029e",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "count",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "increaseCount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastExecuted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_whitelist",
          "type": "bool"
        }
      ],
      "name": "setWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9b6446965c250c253b735ab585b0e0a69973cffcb9e5a5699bad5edd2c8f0a3a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xde79380FBd39e08150adAA5C6c9dE3146f53029e",
    "transactionIndex": 0,
    "gasUsed": "634039",
    "logsBloom": "0x
    "blockHash": "0x4945cc4a2d6a66b31c6c6e87dec499dc10fdbd1b85412f3ab2e2d9d613203f23",
    "transactionHash": "0x9b6446965c250c253b735ab585b0e0a69973cffcb9e5a5699bad5edd2c8f0a3a",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 17982456,
        "transactionHash": "0x9b6446965c250c253b735ab585b0e0a69973cffcb9e5a5699bad5edd2c8f0a3a",
        "address": "0xde79380FBd39e08150adAA5C6c9dE3146f53029e",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x4945cc4a2d6a66b31c6c6e87dec499dc10fdbd1b85412f3ab2e2d9d613203f23"
      }
    ],
    "blockNumber": 17982456,
    "cumulativeGasUsed": "634039",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "91597d84036c5d4ab4b440d9655508fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastExecuted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_whitelist\",\"type\":\"bool\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/CounterWL.sol\":\"CounterWL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/test/CounterWL.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n// solhint-disable not-rely-on-time\\r\\ncontract CounterWL is Ownable {\\r\\n    uint256 public count;\\r\\n    uint256 public lastExecuted;\\r\\n    mapping(address => bool) public whitelisted;\\r\\n\\r\\n    modifier onlyWhitelisted() {\\r\\n        require(\\r\\n            whitelisted[msg.sender] || msg.sender == owner(),\\r\\n            \\\"Counter: Not whitelisted\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function increaseCount(uint256 amount) external onlyWhitelisted {\\r\\n        require(\\r\\n            ((block.timestamp - lastExecuted) > 180),\\r\\n            \\\"Counter: increaseCount: Time not elapsed\\\"\\r\\n        );\\r\\n\\r\\n        count += amount;\\r\\n        lastExecuted = block.timestamp;\\r\\n    }\\r\\n\\r\\n    function setWhitelist(address _account, bool _whitelist)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        whitelisted[_account] = _whitelist;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x78152e8e0da9605de40d805a72ddf18ec7173dad78f0bc7a16c28790588593bf\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a0d8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101015780638da5cb5b1461010b578063d936547e14610129578063f2fde38b1461015957610088565b806306661abd1461008d5780631c15ff77146100ab57806346d4adf2146100c957806353d6fd59146100e5575b600080fd5b610095610175565b6040516100a29190610563565b60405180910390f35b6100b361017b565b6040516100c09190610563565b60405180910390f35b6100e360048036038101906100de91906105af565b610181565b005b6100ff60048036038101906100fa9190610672565b6102bd565b005b610109610320565b005b610113610334565b60405161012091906106c1565b60405180910390f35b610143600480360381019061013e91906106dc565b61035d565b6040516101509190610718565b60405180910390f35b610173600480360381019061016e91906106dc565b61037d565b005b60015481565b60025481565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061020b57506101dc610334565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610790565b60405180910390fd5b60b46002544261025a91906107df565b1161029a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029190610885565b60405180910390fd5b80600160008282546102ac91906108a5565b925050819055504260028190555050565b6102c5610400565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610328610400565b610332600061047e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915054906101000a900460ff1681565b610385610400565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103eb9061094b565b60405180910390fd5b6103fd8161047e565b50565b610408610542565b73ffffffffffffffffffffffffffffffffffffffff16610426610334565b73ffffffffffffffffffffffffffffffffffffffff161461047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610473906109b7565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61055d8161054a565b82525050565b60006020820190506105786000830184610554565b92915050565b600080fd5b61058c8161054a565b811461059757600080fd5b50565b6000813590506105a981610583565b92915050565b6000602082840312156105c5576105c461057e565b5b60006105d38482850161059a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610607826105dc565b9050919050565b610617816105fc565b811461062257600080fd5b50565b6000813590506106348161060e565b92915050565b60008115159050919050565b61064f8161063a565b811461065a57600080fd5b50565b60008135905061066c81610646565b92915050565b600080604083850312156106895761068861057e565b5b600061069785828601610625565b92505060206106a88582860161065d565b9150509250929050565b6106bb816105fc565b82525050565b60006020820190506106d660008301846106b2565b92915050565b6000602082840312156106f2576106f161057e565b5b600061070084828501610625565b91505092915050565b6107128161063a565b82525050565b600060208201905061072d6000830184610709565b92915050565b600082825260208201905092915050565b7f436f756e7465723a204e6f742077686974656c69737465640000000000000000600082015250565b600061077a601883610733565b915061078582610744565b602082019050919050565b600060208201905081810360008301526107a98161076d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107ea8261054a565b91506107f58361054a565b925082820390508181111561080d5761080c6107b0565b5b92915050565b7f436f756e7465723a20696e637265617365436f756e743a2054696d65206e6f7460008201527f20656c6170736564000000000000000000000000000000000000000000000000602082015250565b600061086f602883610733565b915061087a82610813565b604082019050919050565b6000602082019050818103600083015261089e81610862565b9050919050565b60006108b08261054a565b91506108bb8361054a565b92508282019050808211156108d3576108d26107b0565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610935602683610733565b9150610940826108d9565b604082019050919050565b6000602082019050818103600083015261096481610928565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109a1602083610733565b91506109ac8261096b565b602082019050919050565b600060208201905081810360008301526109d081610994565b905091905056fea264697066735822122054e65aeeca24fd9d7ec8274a86fa98dad3dc4a48c723e2ae7cd1f5a783065be564736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101015780638da5cb5b1461010b578063d936547e14610129578063f2fde38b1461015957610088565b806306661abd1461008d5780631c15ff77146100ab57806346d4adf2146100c957806353d6fd59146100e5575b600080fd5b610095610175565b6040516100a29190610563565b60405180910390f35b6100b361017b565b6040516100c09190610563565b60405180910390f35b6100e360048036038101906100de91906105af565b610181565b005b6100ff60048036038101906100fa9190610672565b6102bd565b005b610109610320565b005b610113610334565b60405161012091906106c1565b60405180910390f35b610143600480360381019061013e91906106dc565b61035d565b6040516101509190610718565b60405180910390f35b610173600480360381019061016e91906106dc565b61037d565b005b60015481565b60025481565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168061020b57506101dc610334565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610790565b60405180910390fd5b60b46002544261025a91906107df565b1161029a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029190610885565b60405180910390fd5b80600160008282546102ac91906108a5565b925050819055504260028190555050565b6102c5610400565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610328610400565b610332600061047e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60036020528060005260406000206000915054906101000a900460ff1681565b610385610400565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103eb9061094b565b60405180910390fd5b6103fd8161047e565b50565b610408610542565b73ffffffffffffffffffffffffffffffffffffffff16610426610334565b73ffffffffffffffffffffffffffffffffffffffff161461047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610473906109b7565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61055d8161054a565b82525050565b60006020820190506105786000830184610554565b92915050565b600080fd5b61058c8161054a565b811461059757600080fd5b50565b6000813590506105a981610583565b92915050565b6000602082840312156105c5576105c461057e565b5b60006105d38482850161059a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610607826105dc565b9050919050565b610617816105fc565b811461062257600080fd5b50565b6000813590506106348161060e565b92915050565b60008115159050919050565b61064f8161063a565b811461065a57600080fd5b50565b60008135905061066c81610646565b92915050565b600080604083850312156106895761068861057e565b5b600061069785828601610625565b92505060206106a88582860161065d565b9150509250929050565b6106bb816105fc565b82525050565b60006020820190506106d660008301846106b2565b92915050565b6000602082840312156106f2576106f161057e565b5b600061070084828501610625565b91505092915050565b6107128161063a565b82525050565b600060208201905061072d6000830184610709565b92915050565b600082825260208201905092915050565b7f436f756e7465723a204e6f742077686974656c69737465640000000000000000600082015250565b600061077a601883610733565b915061078582610744565b602082019050919050565b600060208201905081810360008301526107a98161076d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107ea8261054a565b91506107f58361054a565b925082820390508181111561080d5761080c6107b0565b5b92915050565b7f436f756e7465723a20696e637265617365436f756e743a2054696d65206e6f7460008201527f20656c6170736564000000000000000000000000000000000000000000000000602082015250565b600061086f602883610733565b915061087a82610813565b604082019050919050565b6000602082019050818103600083015261089e81610862565b9050919050565b60006108b08261054a565b91506108bb8361054a565b92508282019050808211156108d3576108d26107b0565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610935602683610733565b9150610940826108d9565b604082019050919050565b6000602082019050818103600083015261096481610928565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006109a1602083610733565b91506109ac8261096b565b602082019050919050565b600060208201905081810360008301526109d081610994565b905091905056fea264697066735822122054e65aeeca24fd9d7ec8274a86fa98dad3dc4a48c723e2ae7cd1f5a783065be564736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/test/CounterWL.sol:CounterWL",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 150,
        "contract": "contracts/test/CounterWL.sol:CounterWL",
        "label": "count",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 152,
        "contract": "contracts/test/CounterWL.sol:CounterWL",
        "label": "lastExecuted",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 156,
        "contract": "contracts/test/CounterWL.sol:CounterWL",
        "label": "whitelisted",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}